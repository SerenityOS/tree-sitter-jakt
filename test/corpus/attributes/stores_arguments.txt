================================================================================
Attributes Stores Arguments ID=7BNZAIN
================================================================================

/// Expect:
/// - error: "Cannot pass this argument by reference, it is not guaranteed to outlive the object it will be stored in\n"

extern struct Vector<T> {
    fn Vector<T>() -> Vector<T>

    [[stores_arguments(y: this)]]
    fn append(mut this, anon y: &T) -> void
}

fn main() {
    let x = 10i32
    {
        let y = 10i32
        mut v = Vector<i32>()
        v.append(&x)
        v.append(&y)
    }
}

--------------------------------------------------------------------------------

(source_file
  (line_comment)
  (line_comment)
  (struct_declaration
    (extern_specifier)
    (generic_type
      (identifier)
      (generic_arguments
        (generic_type_identifier)))
    (field_declaration_list
      (generic_function_declaration
        (generic_type
          (identifier)
          (generic_arguments
            (generic_type_identifier)))
        (parameters)
        (generic_type
          (identifier)
          (generic_arguments
            (generic_type_identifier))))
      (function_declaration
        (attributes
          (call_expression
            (identifier)
            (arguments
              (argument
                (identifier)
                (this_reference)))))
        (identifier)
        (parameters
          (this_parameter
            (mutable_specifier)
            (this_reference))
          (parameter
            (anonymous_specifier)
            (identifier)
            (reference_type
              (identifier))))
        (primitive_type))))
  (function_declaration
    (identifier)
    (parameters)
    (block
      (let_declaration
        (identifier)
        (integer_literal))
      (block
        (let_declaration
          (identifier)
          (integer_literal))
        (mutable_declaration
          (mutable_specifier)
          (identifier)
          (call_expression
            (generic_function
              (identifier)
              (generic_arguments
                (primitive_type)))
            (arguments)))
        (call_expression
          (field_expression
            (identifier)
            (field_identifier))
          (arguments
            (argument
              (pointer_expression
                (identifier)))))
        (call_expression
          (field_expression
            (identifier)
            (field_identifier))
          (arguments
            (argument
              (pointer_expression
                (identifier)))))))))
