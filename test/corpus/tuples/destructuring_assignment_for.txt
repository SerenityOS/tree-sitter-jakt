================================================================================
Tuples destructuring assignment for
================================================================================

function main() {
    mut list = [(1, "Hello"), (2, "World")]

    for (idx, word) in list.iterator() {
        println("{}, {}" idx, word)
    }
}

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    (identifier)
    (parameters)
    (block
      (mutable_declaration
        (mutable_specifier)
        (identifier)
        (array_literal
          (tuple_literal
            (integer_literal)
            (string_literal))
          (tuple_literal
            (integer_literal)
            (string_literal))))
      (for_expression
        (destructuring_literal
          (identifier)
          (identifier))
        (call_expression
          (field_expression
            (identifier)
            (field_identifier))
          (arguments))
        (block
          (call_expression
            (identifier)
            (arguments
              (argument
                (string_literal))
              (argument
                (identifier))
              (argument
                (identifier)))))))))

================================================================================
Tuples destructuring assignment for (no commas)
================================================================================

function main() {
    mut list = [(1, "Hello") (2, "World")]

    for (idx word) in list.iterator() {
        println("{} {}" idx word)
    }
}

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    (identifier)
    (parameters)
    (block
      (mutable_declaration
        (mutable_specifier)
        (identifier)
        (array_literal
          (tuple_literal
            (integer_literal)
            (string_literal))
          (tuple_literal
            (integer_literal)
            (string_literal))))
      (for_expression
        (destructuring_literal
          (identifier)
          (identifier))
        (call_expression
          (field_expression
            (identifier)
            (field_identifier))
          (arguments))
        (block
          (call_expression
            (identifier)
            (arguments
              (argument
                (string_literal))
              (argument
                (identifier))
              (argument
                (identifier)))))))))

================================================================================
Tuples destructuring assignment for (isolated)
================================================================================

mut list = [(1, "Hello"), (2, "World")]

--------------------------------------------------------------------------------

(source_file
  (mutable_declaration
    (mutable_specifier)
    (identifier)
    (array_literal
      (tuple_literal
        (integer_literal)
        (string_literal))
      (tuple_literal
        (integer_literal)
        (string_literal)))))

================================================================================
Tuples destructuring assignment for (isolated, no commas)
================================================================================

mut list = [(1, "Hello") (2, "World")]

--------------------------------------------------------------------------------

(source_file
  (mutable_declaration
    (mutable_specifier)
    (identifier)
    (array_literal
      (tuple_literal
        (integer_literal)
        (string_literal))
      (tuple_literal
        (integer_literal)
        (string_literal)))))

================================================================================
Tuples destructuring assignment for (isolated, no commas, split)
================================================================================

mut list = [(1, "Hello") 

(2, "World")]

--------------------------------------------------------------------------------

(source_file
  (mutable_declaration
    (mutable_specifier)
    (identifier)
    (array_literal
      (tuple_literal
        (integer_literal)
        (string_literal))
      (tuple_literal
        (integer_literal)
        (string_literal)))))
