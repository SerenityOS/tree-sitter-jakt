================================================================================
Compiletime Execution Match ID=5XCV895
================================================================================

/// Expect:
/// - output: "32\n32\n42\n"

enum SomeEnum {
    A(i32)
    B(
        x: i32
        y: i32
    )
    C
}

comptime match_some_enum(anon x: SomeEnum) => match x {
    A(a) => a
    B(x: y) => y
    C => 42i32
}

fn main() {
    println("{}", match_some_enum(SomeEnum::A(32i32)))
    println("{}", match_some_enum(SomeEnum::B(x: 32i32, y: 64i32)))
    println("{}", match_some_enum(SomeEnum::C))
}

--------------------------------------------------------------------------------

(source_file
  (line_comment)
  (line_comment)
  (enum_declaration
    (type_identifier)
    (enum_variant_list
      (enum_tuple_variant
        (identifier)
        (primitive_type))
      (enum_struct_variant
        (identifier)
        (field_declaration
          (field_identifier)
          (primitive_type))
        (field_declaration
          (field_identifier)
          (primitive_type)))
      (enum_variant
        (identifier))))
  (comptime_function_declaration
    (identifier)
    (parameters
      (parameter
        (anonymous_specifier)
        (identifier)
        (type_identifier)))
    (return_expression
      (match_expression
        (identifier)
        (match_block
          (match_arm
            (match_pattern
              (call_expression
                (identifier)
                (arguments
                  (argument
                    (identifier)))))
            (identifier))
          (match_arm
            (match_pattern
              (call_expression
                (identifier)
                (arguments
                  (argument
                    (identifier)
                    (identifier)))))
            (identifier))
          (match_arm
            (match_pattern
              (identifier))
            (integer_literal))))))
  (function_declaration
    (identifier)
    (parameters)
    (block
      (call_expression
        (identifier)
        (arguments
          (argument
            (string_literal))
          (argument
            (call_expression
              (identifier)
              (arguments
                (argument
                  (static_call_expression
                    (scoped_identifier)
                    (field_identifier)
                    (arguments
                      (argument
                        (integer_literal))))))))))
      (call_expression
        (identifier)
        (arguments
          (argument
            (string_literal))
          (argument
            (call_expression
              (identifier)
              (arguments
                (argument
                  (static_call_expression
                    (scoped_identifier)
                    (field_identifier)
                    (arguments
                      (argument
                        (identifier)
                        (integer_literal))
                      (argument
                        (identifier)
                        (integer_literal))))))))))
      (call_expression
        (identifier)
        (arguments
          (argument
            (string_literal))
          (argument
            (call_expression
              (identifier)
              (arguments
                (argument
                  (namespace_scope_expression
                    (scoped_identifier)
                    (field_identifier)))))))))))
