================================================================================
Functions Arrow Function ID=OEIITAW
================================================================================

/// Expect:
/// - output: "50\nHello, friends!\n"

fn area(width: i64, height: i64) => width * height
fn greeting(name: String) throws -> String => format("Hello, {}!", name)
fn greet(name: String) throws {
    println("{}", greeting(name))
} 

fn main() {
    let a = area(width: 5, height: 10)
    println("{}", a)

    greet(name: "friends")
}

--------------------------------------------------------------------------------

(source_file
  (line_comment)
  (line_comment)
  (function_declaration
    (identifier)
    (parameters
      (parameter
        (identifier)
        (primitive_type))
      (parameter
        (identifier)
        (primitive_type)))
    (return_expression
      (binary_expression
        (identifier)
        (identifier))))
  (function_declaration
    (identifier)
    (parameters
      (parameter
        (identifier)
        (primitive_type)))
    (throws_specifier)
    (primitive_type)
    (return_expression
      (call_expression
        (identifier)
        (arguments
          (argument
            (string_literal))
          (argument
            (identifier))))))
  (function_declaration
    (identifier)
    (parameters
      (parameter
        (identifier)
        (primitive_type)))
    (throws_specifier)
    (block
      (call_expression
        (identifier)
        (arguments
          (argument
            (string_literal))
          (argument
            (call_expression
              (identifier)
              (arguments
                (argument
                  (identifier)))))))))
  (function_declaration
    (identifier)
    (parameters)
    (block
      (let_declaration
        (identifier)
        (call_expression
          (identifier)
          (arguments
            (argument
              (identifier)
              (integer_literal))
            (argument
              (identifier)
              (integer_literal)))))
      (call_expression
        (identifier)
        (arguments
          (argument
            (string_literal))
          (argument
            (identifier))))
      (call_expression
        (identifier)
        (arguments
          (argument
            (identifier)
            (string_literal)))))))
