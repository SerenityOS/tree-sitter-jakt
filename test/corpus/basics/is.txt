================================================================================
Basics is expression (class)
================================================================================


class Foo {
    x: i64
}

class Bar {
    y: i64
}

--------------------------------------------------------------------------------

(source_file
  (class_declaration
    (type_identifier)
    (field_declaration_list
      (field_declaration
        (field_identifier)
        (primitive_type))))
  (class_declaration
    (type_identifier)
    (field_declaration_list
      (field_declaration
        (field_identifier)
        (primitive_type)))))

================================================================================
Basics is expression
================================================================================

if foo is Foo {
    println("OK")
}

if foo is Bar {
    println("Error: Foo should not be Bar")
}

if Bar(y: 5) is Bar {
    println("OK")
}

if Bar(y: 10) is Foo {
    println("Error: Bar should not be Foo")
}

--------------------------------------------------------------------------------

(source_file
  (if_statement
    (is_expression
      (identifier)
      (identifier))
    (block
      (call_expression
        (identifier)
        (arguments
          (string_literal)))))
  (if_statement
    (is_expression
      (identifier)
      (identifier))
    (block
      (call_expression
        (identifier)
        (arguments
          (string_literal)))))
  (if_statement
    (is_expression
      (call_expression
        (identifier)
        (arguments
          (argument
            (identifier)
            (integer_literal))))
      (identifier))
    (block
      (call_expression
        (identifier)
        (arguments
          (string_literal)))))
  (if_statement
    (is_expression
      (call_expression
        (identifier)
        (arguments
          (argument
            (identifier)
            (integer_literal))))
      (identifier))
    (block
      (call_expression
        (identifier)
        (arguments
          (string_literal))))))
