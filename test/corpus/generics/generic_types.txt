================================================================================
Generics Generic Types ID=UNDGO2O
================================================================================

/// Expect:
/// - output: "3\n"

fn do_pop<T>(anon mut arr: [T]) -> Optional<T> {
  return arr.pop()
}

fn main() {
  mut arr = [1, 2, 3];

  println("{}", do_pop(arr)!)
}

--------------------------------------------------------------------------------

(source_file
  (line_comment)
  (line_comment)
  (generic_function_declaration
    (generic_type
      (identifier)
      (generic_arguments
        (generic_type_identifier)))
    (parameters
      (parameter
        (anonymous_specifier)
        (mutable_specifier)
        (identifier)
        (array_type
          (type_identifier))))
    (generic_type
      (identifier)
      (generic_arguments
        (generic_type_identifier)))
    (block
      (return_statement
        (call_expression
          (field_expression
            (identifier)
            (field_identifier))
          (arguments)))))
  (function_declaration
    (identifier)
    (parameters)
    (block
      (mutable_declaration
        (mutable_specifier)
        (identifier)
        (array_literal
          (integer_literal)
          (integer_literal)
          (integer_literal)))
      (call_expression
        (identifier)
        (arguments
          (argument
            (string_literal))
          (argument
            (optional_value_expression
              (call_expression
                (identifier)
                (arguments
                  (argument
                    (identifier)))))))))))
