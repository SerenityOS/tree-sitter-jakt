================================================================================
Enum methods!
================================================================================

enum Foo {
    Id(i32)
    Name(String)

    private function name_impl(this) throws -> String? {
        match this {
            Name(name) => {
                return name
            }
            Id(id) => {
                return format("anon:{}", id)
            }
        }
    }

    function name(this) throws {
        return this.name_impl()
    }
}

function main() {
    let foo = Foo::Id(1)
    let bar = Foo::Name("Test")
    println("Foo's name is {} and bar's name is {}!", foo.name(), bar.name())
}

--------------------------------------------------------------------------------

(source_file
  (enum_declaration
    (type_identifier)
    (enum_variant_list
      (enum_tuple_variant
        (identifier)
        (primitive_type))
      (enum_tuple_variant
        (identifier)
        (primitive_type))
      (enum_method_variant
        (visibility_specifier)
        (identifier)
        (parameters
          (this_parameter
            (this_reference)))
        (throws_specifier)
        (primitive_type)
        (optional_specifier)
        (block
          (match_expression
            (this_reference)
            (match_block
              (match_arm
                (match_pattern
                  (call_expression
                    (identifier)
                    (arguments
                      (identifier))))
                (block
                  (return_statement
                    (identifier))))
              (match_arm
                (match_pattern
                  (call_expression
                    (identifier)
                    (arguments
                      (identifier))))
                (block
                  (return_statement
                    (call_expression
                      (identifier)
                      (arguments
                        (string_literal)
                        (identifier))))))))))
      (enum_method_variant
        (identifier)
        (parameters
          (this_parameter
            (this_reference)))
        (throws_specifier)
        (block
          (return_statement
            (call_expression
              (field_expression
                (this_reference)
                (field_identifier))
              (arguments)))))))
  (function_declaration
    (identifier)
    (parameters)
    (block
      (let_declaration
        (identifier)
        (static_call_expression
          (scoped_identifier)
          (field_identifier)
          (arguments
            (integer_literal))))
      (let_declaration
        (identifier)
        (static_call_expression
          (scoped_identifier)
          (field_identifier)
          (arguments
            (string_literal))))
      (call_expression
        (identifier)
        (arguments
          (string_literal)
          (call_expression
            (field_expression
              (identifier)
              (field_identifier))
            (arguments))
          (call_expression
            (field_expression
              (identifier)
              (field_identifier))
            (arguments)))))))
