================================================================================
Control flow try catch (helpers)
================================================================================

function notoss() throws -> i32 {
    if not true {
        throw Error::from_errno(123456)
    }
    return 5
}

function toss(anon value: i32) throws {
    throw Error::from_errno(value)
}

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    (identifier)
    (parameters)
    (throws_specifier)
    (primitive_type)
    (block
      (if_statement
        (logical_not
          (boolean_literal))
        (block
          (throw_statement
            (call_expression
              (static_member_expression
                (identifier)
                (field_identifier))
              (arguments
                (integer_literal))))))
      (return_statement
        (integer_literal))))
  (function_declaration
    (identifier)
    (parameters
      (parameter
        (anonymous_specifier)
        (identifier)
        (primitive_type)))
    (throws_specifier)
    (block
      (throw_statement
        (call_expression
          (static_member_expression
            (identifier)
            (field_identifier))
          (arguments
            (identifier)))))))


================================================================================
Control flow try catch 1
================================================================================

try toss(1234) catch error {
    println("Caught {}", error.code())
}

--------------------------------------------------------------------------------

(source_file
  (try_statement
    (call_expression
      (identifier)
      (arguments
        (integer_literal)))
    (identifier)
    (block
      (call_expression
        (identifier)
        (arguments
          (string_literal)
          (call_expression
            (field_expression
              (identifier)
              (field_identifier))
            (arguments)))))))

================================================================================
Control flow try catch 2
================================================================================

try {
    toss(6969)
} catch error {
    println("Caught {}", error.code())
}

--------------------------------------------------------------------------------

(source_file
  (try_statement
    (block
      (call_expression
        (identifier)
        (arguments
          (integer_literal))))
    (identifier)
    (block
      (call_expression
        (identifier)
        (arguments
          (string_literal)
          (call_expression
            (field_expression
              (identifier)
              (field_identifier))
            (arguments)))))))

================================================================================
Control flow try catch 2 (now with more call expressions)
================================================================================

try {
    notoss()
    toss(5252)
    println("FAIL")
} catch error {
    println("Caught {}", error.code())
}

--------------------------------------------------------------------------------

(source_file
  (try_statement
    (block
      (call_expression
        (identifier)
        (arguments))
      (call_expression
        (identifier)
        (arguments
          (integer_literal)))
      (call_expression
        (identifier)
        (arguments
          (string_literal))))
    (identifier)
    (block
      (call_expression
        (identifier)
        (arguments
          (string_literal)
          (call_expression
            (field_expression
              (identifier)
              (field_identifier))
            (arguments)))))))
