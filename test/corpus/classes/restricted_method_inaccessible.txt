================================================================================
Classes inaccessible restricted method
================================================================================

class Limited {
    restricted(A) function get_secret() => "Shhhh! Don't tell anyone!"
    restricted(A,B) function open_the_bank_vault() => "Open sesame!"
}

class A {}

class B {}

class C {
    public function do_things() {
        println("The secret is: {}", Limited::get_secret())
        println("{}", Limited::open_the_bank_vault())
    }
}

function main() {
    C::do_things()
}

--------------------------------------------------------------------------------

(source_file
  (class_declaration
    (type_identifier)
    (field_declaration_list
      (function_declaration
        (restricted_specifier
          (identifier))
        (identifier)
        (parameters)
        (return_expression
          (string_literal)))
      (function_declaration
        (restricted_specifier
          (identifier)
          (identifier))
        (identifier)
        (parameters)
        (return_expression
          (string_literal)))))
  (class_declaration
    (type_identifier)
    (field_declaration_list))
  (class_declaration
    (type_identifier)
    (field_declaration_list))
  (class_declaration
    (type_identifier)
    (field_declaration_list
      (function_declaration
        (public_specifier)
        (identifier)
        (parameters)
        (block
          (call_expression
            (identifier)
            (arguments
              (string_literal)
              (call_expression
                (static_member_expression
                  (identifier)
                  (field_identifier))
                (arguments))))
          (call_expression
            (identifier)
            (arguments
              (string_literal)
              (call_expression
                (static_member_expression
                  (identifier)
                  (field_identifier))
                (arguments))))))))
  (function_declaration
    (identifier)
    (parameters)
    (block
      (call_expression
        (static_member_expression
          (identifier)
          (field_identifier))
        (arguments)))))
