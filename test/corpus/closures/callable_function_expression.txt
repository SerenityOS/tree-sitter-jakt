================================================================================
Closures callable function expression
================================================================================

function main() {
    let a = match true {
        true => function(x: i32) -> i32 => x
        else => function(x: i32) -> i32 => x + 1
    }

    println("{}", a(x: 1))
}

--------------------------------------------------------------------------------

(source_file
  (function_declaration
    (identifier)
    (parameters)
    (block
      (let_declaration
        (identifier)
        (match_expression
          (boolean_literal)
          (match_block
            (match_arm
              (match_pattern
                (boolean_literal))
              (closure_function
                (parameters
                  (parameter
                    (identifier)
                    (primitive_type)))
                (primitive_type)
                (return_expression
                  (identifier))))
            (match_arm
              (match_else)
              (closure_function
                (parameters
                  (parameter
                    (identifier)
                    (primitive_type)))
                (primitive_type)
                (return_expression
                  (binary_expression
                    (identifier)
                    (integer_literal))))))))
      (call_expression
        (identifier)
        (arguments
          (argument
            (string_literal))
          (argument
            (call_expression
              (identifier)
              (arguments
                (argument
                  (identifier)
                  (integer_literal))))))))))
