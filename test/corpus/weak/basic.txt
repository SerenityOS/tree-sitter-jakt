================================================================================
Weak Basic ID=ERXB2D6
================================================================================

/// Expect:
/// - output: "weak_foo has_value? false\nweak_foo has_value? true\nweak_foo hello: friends\nweak_foo has_value? false\n"

class Foo {
    public fn hello(this) => "friends"
}

fn main() {
    mut weak_foo: weak Foo = None

    println("weak_foo has_value? {}", weak_foo.has_value())

    {
        let foo = Foo()
        weak_foo = foo

        println("weak_foo has_value? {}", weak_foo.has_value())
        println("weak_foo hello: {}", weak_foo!.hello())
    }

    println("weak_foo has_value? {}", weak_foo.has_value())
}

--------------------------------------------------------------------------------

(source_file
  (line_comment)
  (line_comment)
  (class_declaration
    (type_identifier)
    (field_declaration_list
      (function_declaration
        (visibility_specifier)
        (identifier)
        (parameters
          (this_parameter
            (this_reference)))
        (return_expression
          (string_literal)))))
  (function_declaration
    (identifier)
    (parameters)
    (block
      (mutable_declaration
        (mutable_specifier)
        (identifier)
        (weak_specifier)
        (type_identifier)
        (none_expression))
      (call_expression
        (identifier)
        (arguments
          (argument
            (string_literal))
          (argument
            (call_expression
              (field_expression
                (identifier)
                (field_identifier))
              (arguments)))))
      (block
        (let_declaration
          (identifier)
          (call_expression
            (identifier)
            (arguments)))
        (assignment_expression
          (identifier)
          (identifier))
        (call_expression
          (identifier)
          (arguments
            (argument
              (string_literal))
            (argument
              (call_expression
                (field_expression
                  (identifier)
                  (field_identifier))
                (arguments)))))
        (call_expression
          (identifier)
          (arguments
            (argument
              (string_literal))
            (argument
              (call_expression
                (field_expression
                  (optional_value_expression
                    (identifier))
                  (field_identifier))
                (arguments))))))
      (call_expression
        (identifier)
        (arguments
          (argument
            (string_literal))
          (argument
            (call_expression
              (field_expression
                (identifier)
                (field_identifier))
              (arguments))))))))
