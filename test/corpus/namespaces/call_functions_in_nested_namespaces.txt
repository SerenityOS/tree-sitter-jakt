================================================================================
Namespaces Call Functions In Nested Namespaces ID=LV9SGO3
================================================================================

/// Expect:
/// - output: "PASS 1\nPASS 2\nPASS 3\nPASS 4\n"

namespace Outer {
    namespace Inner {
        struct Struct {
            fn method(this) => println("PASS 1")
            fn static_function() => println("PASS 2")
        }
        fn free_function_in_inner_namespace() => println("PASS 3")
    }
    fn free_function_in_outer_namespace() => println("PASS 4")
}

fn main() {
    mut s = Outer::Inner::Struct()
    s.method()
    Outer::Inner::Struct::static_function()
    Outer::Inner::free_function_in_inner_namespace()
    Outer::free_function_in_outer_namespace()
}

--------------------------------------------------------------------------------

(source_file
  (namespace_declaration
    (identifier)
    (block
      (namespace_declaration
        (identifier)
        (block
          (struct_declaration
            (type_identifier)
            (field_declaration_list
              (function_declaration
                (identifier)
                (parameters
                  (this_parameter
                    (this_reference)))
                (return_expression
                  (call_expression
                    (identifier)
                    (arguments
                      (argument
                        (string_literal))))))
              (function_declaration
                (identifier)
                (parameters)
                (return_expression
                  (call_expression
                    (identifier)
                    (arguments
                      (argument
                        (string_literal))))))))
          (function_declaration
            (identifier)
            (parameters)
            (return_expression
              (call_expression
                (identifier)
                (arguments
                  (argument
                    (string_literal))))))))
      (function_declaration
        (identifier)
        (parameters)
        (return_expression
          (call_expression
            (identifier)
            (arguments
              (argument
                (string_literal))))))))
  (function_declaration
    (identifier)
    (parameters)
    (block
      (mutable_declaration
        (mutable_specifier)
        (identifier)
        (namespace_call_expression
          (scoped_identifier)
          (scoped_identifier)
          (field_identifier)
          (arguments)))
      (call_expression
        (field_expression
          (identifier)
          (field_identifier))
        (arguments))
      (namespace_call_expression
        (scoped_identifier)
        (scoped_identifier)
        (scoped_identifier)
        (field_identifier)
        (arguments))
      (namespace_call_expression
        (scoped_identifier)
        (scoped_identifier)
        (field_identifier)
        (arguments))
      (static_call_expression
        (scoped_identifier)
        (field_identifier)
        (arguments)))))
